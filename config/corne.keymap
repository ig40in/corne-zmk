/*
 * Copyright (c) 2023 ISorokin Info
 *
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
// #include <dt-bindings/zmk/outputs.h>

// Layers
#define QWE 0
#define NUM 1
#define NAV 2

/ {
        keymap {
                compatible = "zmk,keymap";

                qwe_layer {
                        bindings = <
&none  &kp Q        &kp W      &kp E       &kp R      &kp T         &kp Y     &kp U      &kp I       &kp O      &kp P           &none   
&none  &kp A        &kp S      &kp D       &kp F      &kp G         &kp H     &kp J      &kp K       &kp L      &kp SEMI        &none  
&none  &kp Z        &kp X      &kp C       &kp V      &kp B         &kp N     &kp M      &kp COMMA   &kp DOT    &kp FSLH    &none 
                               &mt LALT ESC &kp LCTRL &mt LCMD SPACE     &lt NUM TAB    &mt LSHFT BSPC  &lt NAV RET   
                        >;
                };

                num_layer {
                        bindings = <
&none  &kp F1    &kp F2     &kp F3     &kp F4     &kp F5     &kp N1    &kp N2     &kp N3     &kp N4     &kp N5          &none       
&none  &kp F6    &kp F7     &kp F8     &kp F9     &kp F10    &kp N6    &kp N7     &kp N8     &kp N9     &kp N0          &none       
&none  &kp F11   &kp F12    &kp CAPS   &kp APOS   &kp GRAVE  &kp BSLH  &kp LBKT   &kp RBKT   &kp MINUS  &kp EQUAL       &none       
                              &trans    &trans     &trans        &trans    &trans     &trans      
                        >;
                };

                nav_layer {
                        bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &kp C_VOL_UP  &none
&none  &bt BT_CLR    &trans        &trans        &trans        &trans       &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &kp C_VOL_DN  &none
&none  &kp PSCRN     &kp DEL       &trans        &trans        &trans       &kp C_PREV &kp C_PP   &kp C_NEXT &kp C_STOP &kp C_MUTE    &none
                              &trans    &trans     &trans        &trans     &trans     &trans      
                        >;
                };

        };
};
